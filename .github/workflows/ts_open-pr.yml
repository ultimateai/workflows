name: "Open PR to main branch"

on:
  workflow_call:
    inputs:
      test_command:
        required: false
        type: string
        description: "Command for running your tests, defaults to - npm run test"
        default: "npm run test"
      build_command:
        required: false
        type: string
        description: "Command for running npm run build, defaults to - npm run build"
        default: "npm run build"
      lint_command:
        required: false
        type: string
        description: "Command for running npm run lint, defaults to - npm run lint"
        default: "npm run lint"
      npm_install_command:
        required: false
        type: string
        description: "Command for npm i, defaults to - npm i"
        default: "npm i"
      node_version:
        required: false
        type: string
        default: "18.x"
        description: "Node version used in the pipeline, defaults to 18.x"
      npm_version:
        required: false
        type: string
        description: "Npm version used in the pipeline, defaults to LTS version"
      runner:
          required: true
          default: "preemptible-runners"
          description: "Runner to use for the workflow"
          type: string

env:
  TEST_COMMAND: ${{ inputs.test_command }}
  BUILD_COMMAND: ${{ inputs.build_command }}
  LINT_COMMAND: ${{ inputs.lint_command }}
  NPM_INSTALL_COMMAND: ${{ inputs.npm_install_command }}
  NODE_VERSION: ${{ inputs.node_version }}
  NPM_VERSION: ${{ inputs.npm_version }}
  RUNNER: ${{ inputs.runner }}


jobs:
  test_build:
    runs-on: ${{ env.RUNNER }}
    name: Test code and build image
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: npm install
        if: ${{ env.NPM_VERSION }}
        run: npm i -g npm@${{ env.NPM_VERSION }} --registry=https://registry.npmjs.org

      - name: Export Home
        run: echo "HOME=/root" >> $GITHUB_ENV

      ##  Needs to be added so as to pull common Libs from bitbucket ##
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.BB_SSH_KEY }}
          name: id_rsa
          known_hosts: bitbucket.org
          if_key_exists: ignore

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-

      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v2"
        with:
          token_format: "access_token"
          workload_identity_provider: "${{ secrets.WIF_PROVIDER_NAME }}"
          service_account: ${{ secrets.GSA_GCR_EMAIL }}

      - name: Install npm Packages
        run: |
          if grep -q artifactregistry-login "package.json"; then
            npm run artifactregistry-login -- --credential-config .npmrc
          fi
          $NPM_INSTALL_COMMAND

      - name: Lint
        if: ${{ env.LINT_COMMAND }}
        run: $LINT_COMMAND

      - name: Test
        if: ${{ env.TEST_COMMAND }}
        run: $TEST_COMMAND

      - name: build
        if: ${{ env.BUILD_COMMAND }}
        run: $BUILD_COMMAND

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v32.1.2

      - name: Docker build if Dockerfile has changed
        if: contains(steps.changed-files.outputs.modified_files, 'Dockerfile')
        run: |-
          echo "$SSH_KEY" > id_rsa
          docker build .
        shell: bash
        env:
          SSH_KEY: ${{secrets.BB_SSH_KEY}}
