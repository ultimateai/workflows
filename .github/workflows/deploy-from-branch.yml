name: Deploy branch to dev

on:
  workflow_call:
    inputs:
        image_repo:
          required: true
          type: string
          description: "Your container registry repository - like eu.gcr.io/ultimateai-169214"
        app_squad:
          required: true
          type: string
          description: "Your app Squad - where your app is located inside argoCD (backend, ai, qa...)"
        github_email:
          required: true
          type: string
          description: "Automatic CI/CD commits will be done by this email"
        github_user:
          required: true
          type: string
          description: "Automatic CI/CD commits will be done by this user"
        k8s_manifests_repo:
          required: true
          type: string
          description: "Owner and repo name containing your k8s manifests - like ultimateai/k8s-manifests"
        branch_name:
          required: true 
          type: string
          description: "Which branch you want to build and deploy to dev"
        
        


env:
  IMAGE_REPO: ${{ inputs.image_repo }}
  APP_SQUAD: ${{ inputs.app_squad }}
  GITHUB_EMAIL: ${{ inputs.github_email }}
  GITHUB_USER: ${{ inputs.github_user }}
  K8S_MANIFESTS_REPO: ${{ inputs.k8s_manifests_repo }}
  BRANCH_NAME: ${{ inputs.branch_name }}


jobs:
  deploy:
    name: Update k8s-manifest repo
    runs-on: self-hosted
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - name: Checkout to selected branch
        uses: actions/checkout@v3
        with:
          ref: ${{ env.BRANCH_NAME }}
          
      - id: "image_name"
        name: "Get repo name and update IMAGE_NAME"
        run: |- 
          IMAGE_NAME=$IMAGE_REPO"/"${{ github.event.repository.name }}
          echo $IMAGE_NAME
          echo '::set-output name=image_name::'$IMAGE_NAME

      - id: get_image_tag
        name: Get image tag from branch name and commitId
        run: |- 
          TAG=$(git rev-parse --short HEAD)-$BRANCH_NAME
          echo $TAG
          echo '::set-output name=image_tag::'$TAG

      - name: Export Home
        run: echo "HOME=/root" >> $GITHUB_ENV

      ##  Needs to be added so as to pull common Libs from bitbucket ##
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.BB_SSH_KEY }}
          name: id_rsa
          known_hosts: bitbucket.org
          if_key_exists: ignore

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-

      - name: Install npm Packages
        run: npm install

      - name: Test
        if: ${{ env.TEST_COMMAND }}
        run: $TEST_COMMAND

       ### Authentings with Google Cloud to Push Image to GCR ###
      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v0"
        with:
          token_format: "access_token"
          workload_identity_provider: "${{ secrets.WIF_PROVIDER_NAME }}"
          service_account: ${{ secrets.GSA_GCR_EMAIL }}

      - name: "Authenticating docker to push to gcr"
        uses: "docker/login-action@v1"
        with:
          registry: "eu.gcr.io"
          username: "oauth2accesstoken"
          password: "${{ steps.auth.outputs.access_token }}"

      - name: Docker build
        run: |-
          echo "$SSH_KEY" > id_rsa
          docker build -t "${IMAGE_NAME}:${TAGS}" .
        shell: bash
        env:
          SSH_KEY: ${{ secrets.BB_SSH_KEY }}
          TAGS: ${{ steps.get_image_tag.outputs.image_tag }}
          IMAGE_NAME: ${{ steps.image_name.outputs.image_name }}

      - name: Docker push
        run: |-
          docker push "${IMAGE_NAME}:${TAGS}"
        shell: bash
        env:
          TAGS: ${{ steps.get_image_tag.outputs.image_tag }}
          IMAGE_NAME: ${{ steps.image_name.outputs.image_name }}

      ##Deploy to dev
      - name: "Checkout k8s manifests"
        uses: actions/checkout@v3
        with:
          repository: ${{ env.K8S_MANIFESTS_REPO }}
          token: ${{ secrets.ULTIMATE_GITHUB_PAT }}
          
      - name: Update the Image tags for Dev Environment
        run: |-
            cd $APP_SQUAD/${{ github.event.repository.name }}/overlay/${K8S_ENV_NAME}
            kustomize edit set image app=${IMAGE_NAME}:${TAG}
            cat kustomization.yaml
            git config --local user.email $GITHUB_EMAIL
            git config --local user.name $GITHUB_USER
            git commit -m "update image to ${IMAGE_NAME}:${TAG}" -a
            git push ${REMOTE_REPO} HEAD:main --force 
        env:
          TAG: ${{ steps.get_image_tag.outputs.image_tag }}
          REMOTE_REPO: https://${{ secrets.ULTIMATE_GITHUB_PAT }}@github.com/${{ env.K8S_MANIFESTS_REPO }}.git
          K8S_ENV_NAME: development
          IMAGE_NAME: ${{ steps.image_name.outputs.image_name }}