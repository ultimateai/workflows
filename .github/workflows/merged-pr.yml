name: Merged PR to main branch

on:
  workflow_call:
    inputs:
        image_repo:
          required: true
          type: string
          description: "Your container registry repository - default is eu.gcr.io/ultimateai-169214"
          default: eu.gcr.io/ultimateai-169214
        app_squad:
          required: true
          type: string
          description: "Your app Squad - where your app is located inside argoCD (backend, ai, qa...)"
        
        

env:
  IMAGE_REPO: ${{ inputs.image_repo }}
  APP_SQUAD: ${{ inputs.app_squad }}

jobs:
  bump-release:
    name: Bump release
    if: github.event.pull_request.merged == true
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Bump version and release
        uses: amiiit/merge-bump-release@v0.3.10
        with:
          github_token: ${{ secrets.ULTIMATE_GITHUB_PAT }}
          infer_bump_from_commit: true

  push-and-deploy:
    name: Push image with updated tag and update development environment
    runs-on: self-hosted
    needs: bump-release
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - id: "image_name"
        name: "Get repo name and update IMAGE_NAME"
        run: |- 
          IMAGE_NAME=$IMAGE_REPO"/"${{ github.event.repository.name }}
          echo $IMAGE_NAME
          echo '::set-output name=image_name::'$IMAGE_NAME

      - id: fetch_latest_release
        uses: gregziegan/fetch-latest-release@v2.0.0
        with:
          github_token: ${{ secrets.ULTIMATE_GITHUB_PAT }}

      - name: Export Home
        run: echo "HOME=/root" >> $GITHUB_ENV

      ##  Needs to be added so as to pull common Libs from bitbucket ##
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.BB_SSH_KEY }}
          name: id_rsa
          known_hosts: bitbucket.org
          if_key_exists: ignore

      ### Authentings with Google Cloud to Push Image to GCR ###
      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v0"
        with:
          token_format: "access_token"
          workload_identity_provider: "${{ secrets.WIF_PROVIDER_NAME }}"
          service_account: ${{ secrets.GSA_GCR_EMAIL }}

      - name: "Authenticating docker to push to gcr"
        uses: "docker/login-action@v1"
        with:
          registry: "eu.gcr.io"
          username: "oauth2accesstoken"
          password: "${{ steps.auth.outputs.access_token }}"
      
      - name: Docker build
        run: |-
          echo "$SSH_KEY" > id_rsa
          docker build -t "${IMAGE_NAME}:${TAGS}" .
        shell: bash
        env:
          SSH_KEY: ${{secrets.BB_SSH_KEY}}
          TAGS: ${{ steps.fetch_latest_release.outputs.tag_name }}
          IMAGE_NAME: ${{ steps.image_name.outputs.image_name }}

      - name: Docker push
        run: |-
          docker push "${IMAGE_NAME}:${TAGS}"
        shell: bash
        env:
          TAGS: ${{ steps.fetch_latest_release.outputs.tag_name }}
          IMAGE_NAME: ${{ steps.image_name.outputs.image_name }}

      ##Automatic deploy to development on merged PR to main
      - name: "Checkout k8s manifests"
        uses: actions/checkout@v3
        with:
          repository: ultimateai/k8s-manifests
          token: ${{ secrets.ULTIMATE_GITHUB_PAT }}
          
      - name: Update the Image tags for Dev Environment for CronJob k6-loadtest
        run: |-
          cd $APP_SQUAD/${{ github.event.repository.name }}/overlay/${K8S_ENV_NAME}
          kustomize edit set image app=${IMAGE_NAME}:${TAGS}
          cat kustomization.yaml
          git config --local user.email "86783263+ultimateai-bot@users.noreply.github.com"
          git config --local user.name "ultimateai-bot"
          git commit -m "update image to ${IMAGE_NAME}:${TAGS}" -a
          git push ${REMOTE_REPO} HEAD:main --force 
        env:
          TAGS: ${{ steps.fetch_latest_release.outputs.tag_name }}
          REMOTE_REPO: https://${{ secrets.ULTIMATE_GITHUB_PAT }}@github.com/ultimateai/k8s-manifests.git
          K8S_ENV_NAME: development
          IMAGE_NAME: ${{ steps.image_name.outputs.image_name }}
      